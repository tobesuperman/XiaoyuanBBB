<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mjxm.mapping.RequirementMapper">
    <resultMap id="BaseResultMap" type="mjxm.pojo.Requirement">
        <constructor>
            <idArg column="requirement_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="type" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="address" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="visible" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        </constructor>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="mjxm.pojo.Requirement">
        <constructor>
            <idArg column="requirement_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="type" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="address" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="visible" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="content" jdbcType="LONGVARCHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    requirement_id, title, type, address, time, visible, status, user_id
     </sql>
    <sql id="Blob_Column_List">
    content
    </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from requirement
        where requirement_id = #{requirementId,jdbcType=INTEGER}
    </select>
    <select id="selectRequirementJoinUser" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        r.*
        from requirement as r, user as u
        where requirement_id = #{requirementId, jdbcType=INTEGER}
        and r.user_id = u.user_id
    </select>
    <select id="selectUserAllRequirement" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        r.*
        from requirement as r, user as u
        where r.user_id = #{userId, jdbcType=INTEGER}
        and r.user_id = u.user_id
    </select>
    <select id="selectAllRequirement" resultMap="ResultMapWithBLOBs">
        select
        r.*
        from requirement as r, user as u
        where r.user_id = u.user_id
        and r.status = 1
        <if test="title != null">
            and r.title = #{title, jdbcType=VARCHAR}
        </if>
        <if test="type != null">
            and r.type = #{type, jdbcType=INTEGER}
        </if>
        <if test="content != null">
            and r.content = #{content, jdbcType=VARCHAR}
        </if>
        <if test="address != null">
            and r.address = #{address, jdbcType=VARCHAR}
        </if>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from requirement
    where requirement_id = #{requirementId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="mjxm.pojo.Requirement">
    insert into requirement (requirement_id, title, type, 
      address, time, visible, 
      status, user_id, content
      )
    values (#{requirementId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{visible,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
    </insert>
    <insert id="insertSelective" parameterType="mjxm.pojo.Requirement">
        insert into requirement
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="requirementId != null">
                requirement_id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="visible != null">
                visible,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="requirementId != null">
                #{requirementId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="visible != null">
                #{visible,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="mjxm.pojo.Requirement">
        update requirement
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="visible != null">
                visible = #{visible,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where requirement_id = #{requirementId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="mjxm.pojo.Requirement">
    update requirement
    set title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      visible = #{visible,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where requirement_id = #{requirementId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="mjxm.pojo.Requirement">
    update requirement
    set title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      visible = #{visible,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where requirement_id = #{requirementId,jdbcType=INTEGER}
    </update>
    <update id="updateRequirementStatus" parameterType="java.lang.Integer">
    update requirement
    set status = #{status,jdbcType=INTEGER}
    where requirement_id = #{requirementId,jdbcType=INTEGER}
    </update>
</mapper>
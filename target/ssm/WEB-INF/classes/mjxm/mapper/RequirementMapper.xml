<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mjxm.mapper.RequirementMapper" >
  <resultMap id="BaseResultMap" type="mjxm.pojo.Requirement" >
    <id column="requirement_id" property="requirementId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="visible" property="visible" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="mjxm.pojo.Requirement" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    requirement_id, title, type, address, time, visible, status, user_id
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="mjxm.pojo.RequirementExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from requirement
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="mjxm.pojo.RequirementExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from requirement
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from requirement
    where requirement_id = #{requirementId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from requirement
    where requirement_id = #{requirementId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="mjxm.pojo.RequirementExample" >
    delete from requirement
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="mjxm.pojo.Requirement" >
    insert into requirement (requirement_id, title, type, 
      address, time, visible, 
      status, user_id, content
      )
    values (#{requirementId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{visible,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="mjxm.pojo.Requirement" >
    insert into requirement
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="requirementId != null" >
        requirement_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="visible != null" >
        visible,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="requirementId != null" >
        #{requirementId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="visible != null" >
        #{visible,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="mjxm.pojo.RequirementExample" resultType="java.lang.Integer" >
    select count(*) from requirement
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update requirement
    <set >
      <if test="record.requirementId != null" >
        requirement_id = #{record.requirementId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.visible != null" >
        visible = #{record.visible,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update requirement
    set requirement_id = #{record.requirementId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      visible = #{record.visible,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update requirement
    set requirement_id = #{record.requirementId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      visible = #{record.visible,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="mjxm.pojo.Requirement" >
    update requirement
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="visible != null" >
        visible = #{visible,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where requirement_id = #{requirementId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="mjxm.pojo.Requirement" >
    update requirement
    set title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      visible = #{visible,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where requirement_id = #{requirementId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="mjxm.pojo.Requirement" >
    update requirement
    set title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      visible = #{visible,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where requirement_id = #{requirementId,jdbcType=INTEGER}
  </update>
</mapper>